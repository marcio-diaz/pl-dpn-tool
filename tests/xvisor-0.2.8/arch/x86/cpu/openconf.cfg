# Copyright (c) 2012 Himanshu Chauhan.
# All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
# @file    openconf.cfg
# @version 1.0
# @author  Himanshu Chauhan (hschauhan@nulltrace.org)
# @brief   CPU config file for Intel-64 (x86_64)

config CONFIG_X86
	bool
	depends on CONFIG_ARCH_x86
	default y

choice
	prompt "Target Processor"
	default CONFIG_CPU_X86_64
	help
		This is the processor core of your CPU. This information is used for
		determining the correct assembler instructions to use for the core.

		The default is to build for a 64-bit extension of x86 i.e. x86_64 or
	        Intel 64.

	config CONFIG_CPU_X86_64
		bool "Generic x86_64"
		help
	  		Generic 64-bit extension of x86 (Intel 64)
endchoice

if CONFIG_CPU_X86_64

source "arch/x86/cpu/x86_64/openconf.cfg"
source "arch/x86/cpu/common/openconf.cfg"

menu "Processor Features"

config CONFIG_SMP
	bool "Multiprocessor support"
	default n
	help
	 Target architecture is SMP or not. This option will be 
	 automatically enabled by CPU specific config.

config CONFIG_CPU_COUNT
	int "Maximum number of host CPUs"
	range 1 32
	default 1

config CONFIG_VAPOOL_SIZE_MB
	int "Virtual Address Pool Size (in MB)"
	default 8
	help
		Specify the virtual address pool size in mega bytes.

config CONFIG_VAPOOL_ALIGN_MB
	int "Virtual address pool alignment size (in MB)"
	default 2
	help
		Specify the alignment size (in MB) requirement for
		VA Pool start. This is used for calulating max bin
		while initializing buddy allocator for VA pool.

config CONFIG_HOST_IRQ_COUNT
	int "Maximum number of Host IRQs"
	default 224
	help
		The Host IRQ subsystems needs to know maximum number of
		Host IRQs on a host which can vary for different Hosts
		even for same architecture.

		This option is used to specify the maximum number of 
		Host IRQs for underlying Host.

		Generally, the default value of maximum Host IRQs will
		be large enough so that it is suitable for most Hosts.

menu "CPU Cache Configuration"
	menu "L1 Cache"
		config CONFIG_X86_L1_SHIFT
		int "L1 Cache Shift"
		range 4 7
		default 6
	endmenu
endmenu

source "arch/x86/cpu/x86_64/features.cfg"

endmenu

endif

