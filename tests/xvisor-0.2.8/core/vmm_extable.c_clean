typedef int vmm_spinlock_t;typedef int u64;typedef int u16;typedef int bool;typedef int arch_regs_t;typedef int vmm_rwlock_t;typedef int resource_size_t;typedef int loff_t;typedef int irq_flags_t;typedef int u32;typedef int pthread_t;typedef int vmm_scheduler_ctrl;typedef int virtual_addr_t;typedef int u8;typedef int virtual_size_t;typedef int physical_addr_t;typedef int physical_size_t;typedef int atomic_t;typedef int vmm_iommu_fault_handler_t;typedef int dma_addr_t;typedef int size_t;typedef int off_t;typedef int vmm_dr_release_t;typedef int vmm_dr_match_t;typedef int vmm_clocksource_init_t;typedef int s64;typedef int va_list;typedef int vmm_host_irq_handler_t;typedef int vmm_host_irq_function_t;typedef int vmm_host_irq_init_t;typedef int Elf_Ehdr;typedef int Elf_Shdr;typedef int Elf_Sym;typedef int s16;typedef int vmm_clockchip_init_t;typedef int pthread_spinlock_t;




static int cmp_ex(const void *a, const void *b)
{
	const struct vmm_extable_entry *x = a, *y = b;

	
	if (x->insn > y->insn)
		return 1;
	if (x->insn < y->insn)
		return -1;
	return 0;
}

static void sort_extable(struct vmm_extable_entry *start,
			 struct vmm_extable_entry *finish)
{
	simple_sort(start, finish - start,
		    sizeof(struct vmm_extable_entry),
		    cmp_ex, NULL);
}


static const struct vmm_extable_entry *
search_extable(const struct vmm_extable_entry *first,
		const struct vmm_extable_entry *last,
		unsigned long value)
{
	while (first <= last) {
		const struct vmm_extable_entry *mid;

		mid = ((last - first) >> 1) + first;
		
		if (mid->insn < value)
			first = mid + 1;
		else if (mid->insn > value)
			last = mid - 1;
		else
			return mid;
	}

	return NULL;
}

const struct vmm_extable_entry *vmm_extable_search(unsigned long addr)
{
	struct vmm_extable_entry *start =
			(struct vmm_extable_entry *)arch_extable_start();
	struct vmm_extable_entry *end =
			(struct vmm_extable_entry *)arch_extable_end();
	const struct vmm_extable_entry *e;

	e = search_extable(start, end-1, addr);

	return e;
}

int  vmm_extable_init(void)
{
	struct vmm_extable_entry *start =
			(struct vmm_extable_entry *)arch_extable_start();
	struct vmm_extable_entry *end =
			(struct vmm_extable_entry *)arch_extable_end();

	
	sort_extable(start, end);

	return VMM_OK;
}


const struct vmm_extable_entry *vmm_extable_search(unsigned long addr)
{
	return NULL;
}

int  vmm_extable_init(void)
{
	
	return VMM_OK;
}

